# this workflow job is used to automate provision of servers and resources 
# for Google Cloud Project with terraform
# author: Yann Mulonda

name: 'Terraform'

on:
  push:
    branches:
    - test
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  terraform:
    name: 'Provision GCP'
    runs-on: ubuntu-latest
    env:
        TF_VAR_bucket_name: 'bucket_hayet'
        TF_VAR_project_id: yefsah-hayet
        TF_VAR_region: 'europe-west1'
        TF_VAR_zone: 'europe-west1-b'
    permissions:
      contents: 'read'
      id-token: 'write'
    #environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
    
# On push to terraform branch, build or change infrastructure according to Terraform configuration files
    if: github.ref == 'refs/heads/test' && github.event_name == 'push'

    steps:
      - name: Checkout
        uses: actions/checkout@v2
  

      - name: 'Authenticate to Google Cloud'
        id: auth2
        uses: google-github-actions/auth@v0
        with:
            credentials_json: ${{secrets.GCP_SA_KEY}}
        
    # Checkout the repository to the GitHub Actions runner


    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        id: tf_init
        working-directory: ./test/terraform
        run: terraform init -backend-config="bucket=bucket_hayet"
     
      - name: Terraform Validate
        id: tf_validate
        working-directory: ./test/terraform
        run: terraform validate
      - name: Terraform Plan
        id: terraform_plan
        working-directory: ./test/terraform
        run: terraform plan
      - name: Terraform Apply
        id: tf_apply
        working-directory: ./test/terraform
        run: terraform apply -auto-approve -input=false
